hush



do
  cps(90/120)
  s1 $
    -- degradeBy 0.9 $
    slow 2 $
    -- brS 0.2 $
    brF 0.8 $
    rr [9,4] $
    -- zz [3,4] $
    stack [ ssA 0.1 $ ac "1(15,16)" # no [0,3,8,10] [0,1] # ra1 0.0001 0.00002 # rd1 0.2 0.9 # ra2 0.0001 0.0001 # rd2 0.3 0.8 # ri2 0.2 0.9
          , dp "1(12,16,3)" # no [0] [1] # rd1 0.3 0.8
          , slow 2 $ rr [2,5] $ ba "{1(12,16,2)}" # nc [0..30]
          , cp "1(1,16,8)"
          , oh "1(3,16)"
          , ch "1(15,16)?"
          ]
  s8 $ synth "ph*8?" # mul (choose [0,0,0])

hush

do
  cps(90/120)
  s1 $
    -- slow 3 $
    -- degradeBy 0.8 $
    -- brF 0.8 $
    rr [2,5] $
    zz [3,8] $
    ssA 0.4 $
    stack [
    -- ba "1(12, 16)"
    -- , ch "1*16?"
    -- , oh "1/3?"
    ac "1*16?" # nc [0,1,3,6,10] |+| oc [0] # ra1 0.003 0.0008 # rd1 0.1 0.3 # ra2 0.0001 0.2 # rd2 0.1 0.2 # i2 (choose [0..0.9])
    , ssA 0.4 $ ak "1*16?" # nc [0] |+| oc [1..3]  # rd1 0.05 0.2
    ]

  s8 $ synth "ph*7?" # mul (choose [0])




hush


do
  cps(160/120)
  s1 $
    -- ssA 0.8 $
    brF 0.8 $
    brS 0.8 $
    -- degradeBy 0.95 $
    slow 1$
    -- zz [3] $
    stack [ stack [ac "1*8", ak "1*8?"]
            # nc [0] |+| oc [0,1,2,3]
            # rd1 0.3 0.4 # ra2 0.0001 0.0001 # rd2 0.2 0.3 # ri2 0.2 0.8
          , stack [bd "1?", ba "1*8?", cp "1/3?", oh "1*3?", ch "1*16?"] # rd1 0.01 0.1
          , bj "1*6?" # rd1 0.1 0.4 # oc [0,2]
          ]


  s8 $ synth "ph*8?" # mul (choose [1])




do
  cps(110/120)
  s1 $
    -- slow 8 $
    -- ssA 0.8 $
    -- brF 0.99 $
    -- brS 3 $
    zz [3,4] $
    degradeBy 0.2 $
    stack [ stack [ak "1*6?"]
            # nc [0,3,6,10] |+| oc [8,9]
            # rd1 1.4 5
          -- , stack [bd "1?", ba "1*8?", cp "1*3?", oh "1*3?", ch "1*16?"] # rd1 0.01 0.1
          -- , bj "1*6?" # rd1 0.1 0.4 # oc [0,2]
          ]
  s8 $ synth "ph*8?" # mul (choose [0,0,0,0])

hush

do
  cps(160/120)
  s1 $
    -- ssA 0.8 $
    brF 0.8 $
    brS 0.8 $
    degradeBy 0.1 $
    zz [3] $
    stack [ stack [dp "1*7?", ac "1*11", ak "1*14?"]
            # nc [0,3,6,10] |+| oc [0,1,2]
            # rd1 0.01 0.2 # ra2 0.0001 0.0001 # rd2 0.1 0.2 # ri2 0.4 0.8
          , stack [bd "1?", ba "1*8?", cp "1*3?", oh "1*3?", ch "1*16?"] # rd1 0.01 0.1
          , bj "1*6?" # rd1 0.1 0.4 # oc [0,2]
          ]
  s8 $ synth "ph*8?" # mul (choose [0,0,0])

hush


-- do
--   cps(80/120)
--   s1 $
--     stack [ssA 0.2 $ rr [3,4] $ ba "{1(20,29)}/2" # nc [40]
--           , bj "{1(19,29,3)}/16" # oc [0,1,2] # rd1 0.5 1
--           , dp "{1*29}/4" # nc [0,3,7,10] |+| oc [0,1] # rd1 0.1 0.9 # rd2 0.1 0.9 # ri2 0.6 0.9
--           , th "1/4" # nc [0] |+| oc [1] # rd1 1 4
--           ]


hush

do
  cps(140/120)
  s1 $
    -- ssA 0.4 $
    -- brF 0.8 $
    -- brS 0.3 $
    -- degradeBy 0.3 $
    stack [ sometimesBy 0 (stut 4 1 0.25) $zz [3,7] $ ba "1 ~ ~ 1 ~ ~ 1 1/2" # note (choose [0..30])
          , bd "1/3"
          , ssA 0.8 $ (0.5 ~>) $ randcat [cp "1/2",bj "1/3"]
          , rr [3,8] $ ch "1 1/2 1 1 1 1/3 1/8 1"
          , oh "1*8?"
          , dp "1 1/7 1/3 1/4 1/5 1 1/2 1/6" # nc [0] |+| oc [0] # a1 0.3 # rd1 0.8 3 # rd2 0.001 0.1 # i2 0
          , ssB 0.3 $ rr [4] $ rev $ ak "1(6,8,{0,1})" # nc [0..60] # rd1 0.03 0.3
          , slow 6 $ th "1/3 1/2 1/4 ~" # nc [0,3,2,-1] |+| oc [2] # rd1 4 6
          ]
  s8 $ synth "ph*3?" # mul (choose [0,0,0])

hush

do
  cps(140/120)
  s1 $
    -- brF 1 $
    degradeBy 0.3 $
    stack [ randcat [ba x | x <- ["1*4", "1*3", "1*2", ""]] # nc [0..30]
          , randcat [bd x | x <- ["1*4", "", "1*2"]]
          , randcat [ch x | x <- ["1*4", "1*6"]]
          , randcat [oh x | x <- ["1", "1*2", "1*3"]]
          , randcat [cp x | x <- ["1*3", "1*2"]]
          , randcat [ac x | x <- ["1*4?", "1*3", "1*6?"]]
            # nc Scales.diminished2 |+| oc [2,3,4]
            # ra1 0.0001 0.0001 # rd1 0.1 3
            # ra2 0.0001 0.0005 # rd2 0.3 8 # ri2 0.3 1.2
          , randcat [dp x | x <- ["1*16?"]]
            # nc Scales.diminished2 |+| oc [0,1]
            # ra1 0.0001 0.0001 # rd1 0.2 0.2
            # ra2 0.0001 0.05 # rd2 0.3 0.6 # ri2 0.04 0.4
            # rsl 0.001 0.2
          , randcat [ak x | x <- ["1*5", "1*3", "1*7"]]
            # nc [0..96]
            # rd1 0.1 0.3
          ]
  s8 $ synth "ph*8?" # mul (choose [0,0])

hush

do
  cps(140/120)
  s1 $
    -- slow 4 $
    -- brF 0.8 $
    -- degradeBy 0.8 $
    -- brF 0.2 $
    -- brS 0.8 $
    spreadr ($) [e 11 16, e 8 11,e 7 13, e 6 11, e 3 13] $
    stack [ ba "1"
          , ac "1"
            # nc [5,6,8] |+| oc [8]
            # ra1 0.0001 0.001 # rd1 0.4 0.8
            # ra2 0.0001 0.001 # rd2 0.4 3 # ri2 0.8 0.8
          , dp "1"
            # nc [0] |+| oc [1]
            # ra1 0.0001 0.001 # rd1 0.4 2
            # ra2 0.0001 0.001 # rd2 0.4 3 # ri2 0.2 0.8
          , th "1"
            # nc [0,3] |+| oc [4,4,4,5]
            # rd1 0.2 0.8
          , ak "1"
            # nc[90..127]
            # rd1 0.2 3
          , oh "1"
          ]
  s8 $ synth "ph*8?" # mul (choose [0])

s1 $ dp "1" # nc [0] # rd1 3 9


s8 $ synth "ph" # mul (choose [1])

do
  cps(123/120)
  s1 $
    -- brF 0.2$
    -- brS 0.4$
    stack [ bd "1 ~ 1/2 ~ ~ 1/4 ~ ~"
             , ba "1(3,8)"
             , dp "{1*6?}%4" # note "{0 3 2 6 2 11}%4" |+| oc [0,1,2] # a1 0.0001 # rd1 0.8 2 # a2 0.0001 # rd2 0.2 0.6 # ri2 0.3 0.9
             , ac "{1(8,16)}?" # oc [4,5,6] # a1 0.00001 # rd1 0.01 0.4 # a2 0.0001 # rd2 0.3 0.4 # ri2 0.6 0.7
             , ssA 0.6  $ ak "1*8?" # note 36 # rd1 0.1 0.3
             , slow 3 $ th "1(3,8,1)" # note 48 # rd1 0.1 0.2
             , (1 ~>) $ ch "1*8?"
             , oh "1*2"
             ]
  s8 $ synth "ph" # mul (choose [0,0])    


hush




do
  cps(70/120)
  let pat1 = lsysP 8 1 "1:1002,2:201,0:012" "112"
      patn = lsysN 3 3 "0:012,1:1324,2:31,3:13,4:321" "1012" Scales.diminished
      pato = lsysO 4 2 "0:0102,1:1023,2:13,3:244541,4:321,5:442" "231"
  s1 $
    brS 0.8 $
    stack [
    sometimesBy 0.3 (stut 4 0.6 0.25) $ ba pat1
    , (0.25 ~>) $ slow 8 $ cp pat1
    , fast 2 $ ch pat1
    , oh "1"
    , slow 1.5 $ dp pat1 # note patn |+| oc [1] # rd1 2 3
    , off 0.25 (|+| n 4) $ off 0.5 (|+| n 2) $
      sometimes rev $ ac pat1 # note patn |+| note pato # i2 0
    , off 0.5 (|+| n 4) $ off 0.125 (|+| n 2) $
      sometimes rev $ fast 2 $ ak pat1 # note patn |+| note pato # rd1 0.1 0.4
    ] |+| oc [2] # rd1 0.08 0.1
  s8 $ synth "ph*8?" # mul (choose [0])









hush


do
  cps(130/120)
  let pat1 = lsysP 8 2 "0:043,1:134,2:14,3:74,4:6,5:3,6:91,7:57,8:3,9:37" "131"
      pat2 = lsysP 39 8 "a:b,b:bc,c:ab,d:ae,e:ae,f:bcd" "fadcf"
      pat = ur 3 "<p1>" [("p1", pat1), ("p2", pat2)] []
      ss1 = sometimesBy 0.4 (within (0, 0.5) (stut 4 0.2 0.25))
      ss2 = sometimesBy 0.2 (within (0.5, 1) (stut 4 0.5 0.25))
      fr = spreadr fast [x * 0.5 | x <- [1,2,3,4]]
      sr = spreadr slow [x * 0.25 | x <- [4,5,6,7]]
      ror = spreadr (<~) (map (* 0.125) [0,1,2,3,4,5,6,7,8])
      roh = (0.5 ~>)
  s1 $
    -- degradeBy 0.8 $
    stack [ ror $ ba pat
          , ror $ dp pat # no [0,3,6] [0,1] # rd1 20 30 # rd2 0.3 30 # ri2 0.2 0.8
          , slow 4 $ th pat # no [0,3,6] [1]
          , fast 2 $ ak pat1 # oc [0..8]
          , ss1 $ ch pat
          , ror $ oh pat
          ]

hush

:t lsysP



do
  cps(130/120)
  let pat1 = lsysP 7 8 "0:043,1:134,2:14,3:74,4:6,5:3,6:91,7:57,8:3,9:37" "131"
      pat2 = lsysP 6 8 "a:b,b:bc,c:ab,d:ae,e:ae,f:bcd" "fadcf"
      pat = ur 3 "<p1 p2>" [("p1", pat1), ("p2", pat2)] []
      ss1 = sometimesBy 0.4 (within (0, 0.5) (stut 4 0.2 0.25))
      ss2 = sometimesBy 0.2 (within (0.5, 1) (stut 4 0.5 0.25))
      fr = spreadr fast [x * 0.5 | x <- [1,2,3,4]]
      sr = spreadr slow [x * 0.25 | x <- [4,5,6,7]]
      ror = spreadr (<~) (map (* 0.125) [0,1,2,3,4,5,6,7,8])
      roh = (0.5 ~>)
  s1 $
    degradeBy 0.1 $
    stack [ ba pat
          , dp pat # no [0] [1] # rd1 3 8 # rd2 0.3 1 # ri2 0.2 0.8
          , slow 4 $ th pat # no [0,3,6] [4]
          , ror $ ak pat1 # oc [0..8]
          , ss1 $ ch pat
          , ror $ oh pat
          ]
