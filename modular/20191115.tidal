-- params
vd ch = midichan ch # amp 1 # s "vd"
synth = pS "synth"
slew = pF "slew"
cv = pF "cv"
ch = pF "ch"
length = pF "length"
gate = pI "gate"
decay = pF "decay"
mix = pF "mix"
morph = pF "morph"
pan = pF "pan"
-- functions
fastr p xs = spreadr fast (map (* p) xs)
zoomr p xs = spreadr ($) [zoom (0, x) | x <- xs]
rotr p xs = spreadr (~>) xs
degr xs = spreadr (degradeBy) xs
chunkr xs f = spreadr ($) [chunk x (f) | x <- xs]
rr xs = foldEvery xs (spreadr (<~) [0.125, 0.25, 0.5, 0.75])
zz xs = foldEvery xs (zoom (0, 0.5))
stutS n d = stut n 1 d
ss x s e = sometimesBy x (within (s, e) (spreadr ($) [(stutS 3 0.25), (stutS 4 0.25), (stutS 5 0.3)]))
ssA x = ss x 0 0.5
ssB x = ss x 0.5 1
br r f = spreadr f [ x * r | x <- [1,2,3,4,5,6,7,8]] . sometimes (zoom (0,0.5))
brF r = br r fast
brS r =  br r slow
db = degradeBy
sr a b = range a b rand
ssBy p n d = sometimesBy p $ stut n 1 d
cs xs = (fast 16 $ choose xs)
nc xs = note (cs xs)
oc xs = note $ cs [x * 12 | x <- xs]
no ns os = nc ns |+| oc os
noter p1 o = note (choose p1) |+| note (choose (map (* 12) o))
susr xs = sustain (choose xs)
dcyr xs = decay (choose xs)
cc ch v = ccn ch # ccv v
nord ch = midichan ch # amp 1 # s "nord"
nordvar ch v = nord ch # cc 70 (127/8*v)
zzz x = synth x # s "modular"
z = zzz
ccr ch n x = cc ch (range n x rand)
cccc ch = iter 26 $ rotr 0.8 (map (*0.1) [1,2,3,4,5,6]) $ stack [
      degradeBy 0.2 $ (0.1 <~) $ ccr 30 0 127, -- L1/2 mod ammount
      degradeBy 0.2 $ (0.2 <~) $ ccr 31 0 127, -- L1/2 mod rate
      degradeBy 0.2 $ (0.3 <~) $ ccr 25 0 127, -- L1/2 pitch
      degradeBy 0.2 $ (0.4 <~) $ ccr 21 0 127, -- L1/2 eg atk
      degradeBy 0.2 $ (0.5 <~) $ ccr 22 0 127, -- L1/2 eg rel
      degradeBy 0.2 $ (0.6 <~) $ ccr 16 0 127, -- L1/2 select
      degradeBy 0.2 $ (0.7 <~) $ ccr 48 0 127, -- L1/2 bit
      degradeBy 0.2 $ (0.7 <~) $ ccr 49 0 127, -- L1/2 fold
      degradeBy 0.2 $ (0.8 <~) $ ccr 50 0 127,  -- L1/2 drive
      degradeBy 0.2 $ (0.9 <~) $ ccr 10 0 127, -- L1/2 pan
      degradeBy 0.2 $ (1.1 <~) $ ccr 51 0 127, -- L1/2 gain
      degradeBy 0.2 $ (1.2 <~) $ ccr 12 0 127, -- L1/2 send
      degradeBy 0.2 $ (1.3 <~) $ ccr 13 0 127, -- W/G  model
      degradeBy 0.2 $ (1.4 <~) $ ccr 117 0 10, -- W/G  decay
      degradeBy 0.2 $ (1.5 <~) $ ccr 118 0 127,-- W/G  body
      degradeBy 0.2 $ (1.6 <~) $ ccr 119 0 127, -- W/G  tune
      degradeBy 0.2 $ (1.7 <~) $ ccr 26 0 127, -- L1   mod ammount
      degradeBy 0.2 $ (1.8 <~) $ ccr 27 0 127, -- L1   mod rate
      degradeBy 0.2 $ (1.9 <~) $ ccr 23 0 127, -- L1   pitch
      degradeBy 0.2 $ (2.0 <~) $ ccr 17 0 127, -- L1   eg atk
      degradeBy 0.2 $ (2.1 <~) $ ccr 18 0 127, -- L1   eg rel
      degradeBy 0.2 $ (2.2 <~) $ ccr 14 0 127, -- L1   select
      degradeBy 0.2 $ (2.3 <~) $ ccr 28 0 127, -- L2   mod ammount
      degradeBy 0.2 $ (2.4 <~) $ ccr 29 0 127, -- L2   mod rate
      degradeBy 0.2 $ (2.5 <~) $ ccr 24 0 127, -- L2   pitch
      degradeBy 0.2 $ (2.6 <~) $ ccr 19 0 127, -- L2   eg atk
      degradeBy 0.2 $ (2.7 <~) $ ccr 20 0 127, -- L2   eg rel
      degradeBy 0.2 $ (2.8 <~) $ ccr 15 0 127  -- L2   select
      ] # vd ch



hush


d1 $ cv 0 # ch 1 # s "vd"

do
  d2 $ fastr 0.02 [1,2,3,4,5] $ stack[
    rotr 0.9 [0,0.25,0.5] $ zoomr 0.5 [0.2, 0.25] $ degr [0.2] $ vd "5(9,16)"
    , fastr 0.5 [3,4,5] $ cccc 5
    , rotr 0.3 [0,0.25,0.5] $ zoomr 0.2 [0.2, 0.25] $ degr [0.2] $ vd "4(3,16)"
    , fastr 0.5 [3,4,5] $ cccc 4
    -- , fastr 2 [7,9] $ vd (randcat ["0", "0*2", "0*3", "0*4", "1*3", "2*6?", "3*3?"])
    ]

hush

d2 $ silence

do
  let amp = choose [0.3,1]
      p1 = (range (-1) (0.50003) rand)
      p2 = (range (0.3) 0.6 rand)
      idx = cv (range 0.01 0.05 rand)
      spd = (slow 1 $ range 1.2 4 rand)
  d1 $
    fastr 1 [1,2,3,4,5] $
    rotr 0.5 [0.3, 0,8] $
    fastr 1 [1,2,3] $
    iter 16 $
    stack [
    fastr 0.02 [1,2,3,4,5] $ degr [0.29] $ ch "0" # cv p1 # slew (rand*0.8)
    , fastr 0.4 [1,2,3,4,5] $ degr [0.21] $ ch "1" # cv p2 # slew (rand*0)
    , fastr 0.6 [1,2,3] $ degr [0.23] $ ch "2" # idx # slew (rand * 0.9)
    , fastr 0.2 [1,2,3] $ degr [0.24] $ ch "3" # cv (range (-1) 1 rand) # slew (rand*2)
    , fastr 0.8 [1,2,3] $ degr [0.25] $ ch "4" # cv (range (-1) 1 rand) # slew (rand*2)
    , fastr 0.1 [1,2,3] $ degr [0.26] $ ch "5" # cv (range 0.5 1 rand) # slew (rand*2)
    , fastr 2 [1,2,3] $ degr [0.27] $ ch "6" # cv amp # slew (range 0 0.9 rand)
    , fastr 1 [1,2,3] $ degr [0.28] $ ch "7" # cv (range (-1) 1 rand) # slew (rand*0.1)
    , fastr 0.02 [1,2,3,4,5] $ degr [0.29] $ ch "8" # cv p1 # slew (rand*0.8)
    , fastr 0.4 [1,2,3,4,5] $ degr [0.21] $ ch "9" # cv p2 # slew (rand*0)
    , fastr 0.6 [1,2,3] $ degr [0.23] $ ch "10" # idx # slew (rand * 0.9)
    , fastr 0.2 [1,2,3] $ degr [0.24] $ ch "11" # cv (range (-1) 1 rand) # slew (rand*2)
    , fastr 0.8 [1,2,3] $ degr [0.25] $ ch "12" # cv (range (-1) 1 rand) # slew (rand*2)
    , fastr 0.1 [1,2,3] $ degr [0.26] $ ch "13" # cv (range 0.5 1 rand) # slew (rand*2)
    , fastr 2 [1,2,3] $ degr [0.27] $ ch "14" # cv amp # slew (range 0 0.9 rand)
    , fastr 1 [1,2,3] $ degr [0.28] $ ch "15" # cv (range (-1) 1 rand) # slew (rand*0.1)
    ] # s "z" # cps spd

hush

d1 $ ch "0" # cv "1" # s "z"
