-- params
synth = pS "synth"
slew = pF "slew"
cv = pF "cv"
ch = pF "ch"
length = pF "length"
gate = pI "gate"
decay = pF "decay"
mix = pF "mix"
morph = pF "morph"
pan = pF "pan"
-- functions
fastr p xs = spreadr fast (map (* p) xs)
zoomr p xs = spreadr ($) [zoom (0, x) | x <- xs]
rotr p xs = spreadr (~>) xs
degr xs = spreadr (degradeBy) xs
chunkr xs f = spreadr ($) [chunk x (f) | x <- xs]
rr xs = foldEvery xs (spreadr (<~) [0.125, 0.25, 0.5, 0.75])
zz xs = foldEvery xs (zoom (0, 0.5))
stutS n d = stut n 1 d
ss x s e = sometimesBy x (within (s, e) (spreadr ($) [(stutS 3 0.25), (stutS 4 0.25), (stutS 5 0.3)]))
ssA x = ss x 0 0.5
ssB x = ss x 0.5 1
br r f = spreadr f [ x * r | x <- [1,2,3,4,5,6,7,8]] . sometimes (zoom (0,0.5))
brF r = br r fast
brS r =  br r slow
db = degradeBy
sr a b = range a b rand
ssBy p n d = sometimesBy p $ stut n 1 d
cs xs = (fast 16 $ choose xs)
nc xs = note (cs xs)
oc xs = note $ cs [x * 12 | x <- xs]
no ns os = nc ns |+| oc os
noter p1 o = note (choose p1) |+| note (choose (map (* 12) o))
susr xs = sustain (choose xs)
dcyr xs = decay (choose xs)
cc ch v = ccn ch # ccv v
nord ch = midichan ch # amp 1 # s "nord"
nordvar ch v = nord ch # cc 70 (127/8*v)
zzz x = synth x # s "modular"
z = zzz


setcps (0.3)


hush

do
  d1 $ chunk 12 (rev) $ fastr 4 [1,2,3] $ stack [
    fastr 0.1 [1,2,3,4,5] $ degr [0.29] $ ch "0" # cv (range (-0.4) 0.4 rand)
    , fastr 0.2 [1,2,3,4,5] $ degr [0.21] $ ch "1" # cv (range (-0.5) 0.5 rand)
    , fastr 0.6 [1,2,3] $ degr [0.23] $ ch "2" # cv (range (-1) 1 rand) # slew (rand * 0.1)
    , fastr 0.2 [1,2,3] $ degr [0.24] $ ch "3" # cv (range (-1) 1 rand) # slew (rand)
    , fastr 0.8 [1,2,3] $ degr [0.25] $ ch "4" # cv (range (-1) 1 rand) # slew (rand)
    , fastr 0.1 [1,2,3] $ degr [0.26] $ ch "5" # cv (range (-1) 1 rand) # slew (rand)
    , fastr 2 [1,2,3] $ degr [0.27] $ ch "6" # cv (range 0.5 1 rand) # slew (rand)
    , fastr 4 [1,2,3] $ degr [0.28] $ ch "7" # cv (range (-1) 1 rand) # slew (rand*0.1)
    ] # s "z" # cps (slow 12 $ range 0.1 3 rand)




do
  d1 $ fastr 0.5 [1,2,3,4,5] $ rotr 0.5 [0.3, 0,8] $ fastr 1 [1,2,3] $ stack [
    fastr 0.2 [1,2,3,4,5] $ degr [0.29] $ ch "0" # cv (choose [-1..1])
    , fastr 0.4 [1,2,3,4,5] $ degr [0.21] $ ch "1" # cv (choose [0..1])
    , fastr 0.6 [1,2,3] $ degr [0.23] $ ch "2" # cv (range (-1) 1 rand) # slew (rand * 0.1)
    , fastr 0.2 [1,2,3] $ degr [0.24] $ ch "3" # cv (range (-1) 1 rand) # slew (rand)
    , fastr 0.8 [1,2,3] $ degr [0.25] $ ch "4" # cv (range (-1) 1 rand) # slew (rand)
    , fastr 0.1 [1,2,3] $ degr [0.26] $ ch "5" # cv (range (-1) 1 rand) # slew (rand)
    , fastr 2 [1,2,3] $ degr [0.27] $ ch "6" # cv (rand) # slew (range 0 0.3 rand)
    , fastr 5 [1,2,3] $ degr [0.28] $ ch "7" # cv (range (-1) 1 rand) # slew (rand*0.1)
    ] # s "z" # cps (slow 12 $ range 0.1 4 rand)

hush

d1 $ ch "0" # cv "1" # s "z"
