
hush

s1 $ th "1*16" # note 32 # rd1 0.1 0.2

do
  cps(90/120)
  s1 $
    brF 0.5 $
    chunk 5 (rev) $
    spreadr zoom [(0, 0.5), (0, 0.75), (0, 0.6), (0, 0.3)] $
    -- degradeBy 0.8 $
    rr [3,7] $
    stack [ dp "1*16?" # no [0,3,7,11] [0,1,2] # rd1 0.5 4 # rd2 0.5 0.8 # ri2 0 0.4 # slew (choose [0.001..0.3])
          -- , th "1/4?" # no [0,3,7,11,13] [3] # rd1 16 32
          , ssA 0.6 $ ba "1*12?" # nc [0..128]
          , cp "{1(3,8,4)}/4"
          , oh "1?"
          , rr [2,5] $ ch "1(10,12)?"
        ]
  s8 $ synth "ph*8?" # mul (choose [0,0,1])



do
  cps(90/120)
  s1 $
    -- chunk 3 (rev) $
    -- chunk 7 (stut 6 1 0.125) $
    degradeBy 0.4 $
    brS 1 $
    -- brF 3 $
    ssA 0.3 $
    rr [9,4] $
    zz [7] $
    stack [ ssA 0.1 $ ac "1(15,16)"
            # nc [0] # oc [0,1,2]
            # ra1 0.0001 0.00002 # rd1 0.2 10 # ra2 0.0001 0.0003 # rd2 3 9 # ri2 0.2 0.7
          , dp "1(12,16,3)" # no [0] [1] # rd1 0.3 0.8
          , slow 2 $ rr [2,5] $ ba "{1(13,16,2)}" # nc [0..30]
          , cp "1(1,16,8)"
          , oh "1(3,16)"
          , ssA 0.7 $ ch "1(15,16)?"
          ]
  -- s8 $ synth "ph*8?" # mul (choose [0,1])
  s8 $ synth "ph*8?" # mul (choose [0,0,0,0,0,1])


hush

do
  let p = nc [0,3,6,10] |+| oc [0,1,2,3] # rd1 0.3 2 # ra2 0.0001 0.0001 # rd2 0.1 0.8 # ri2 0.2 0.8
  cps(160/120)
  s1 $
    ssA 0.3 $
    brF 2 $
    brS 1 $
    degradeBy 0.2 $
    zz [3] $
    stack [ dp "1*7?" # p
          , ac "1*11?" # p
          , ak "1*14?" # p
          , bj "1*6?" # p
          , stack [bd "1?", ba "1*14?", cp "1*3?", oh "1*3?", ch "1*16?"] # rd1 0.01 0.4 # nc [0..30]
          ]
  s8 $ synth "ph*8?" # mul (choose [0,0,1])



do
  cps (85/120)
  hush
  s1 $
    -- chunk 2 (rev) $
    -- chunk 4 (sometimesBy 0.5 (stut 3 1 0.125)) $
    spreadr fast (map (* 0.25) [1,2,3,4,5,6,7,8]) $
    degradeBy 0.2 $
    rr [3] $
    zz [4] $
    stack [
      dp "1(14,16)"
      # no Scales.minor [0,1]
      # funcA 0.001 (fast 9 $ choose [0.2..0.9]) 1
      # funcB 0.001 (sr 0.3 0.7) 0.9
      , ac "1(13,16,2)"
        # note "{3 4 2 6}/4" # oc [0,2,4]
        # funcA 0.001 (sr 0.2 0.4) 1
        # funcB 0.001 (sr 0.2 0.3) (sr 0.7 0.8)
      , ba "1(7,16)"
      , bd "1(3,16)"
      , cp "1(1,8,6)"
      , oh "1(3,16)"
      , ch "1*16?"
      , (4 <~) $ ak "1*8?" # nc [0..96] # rd1 0.1 0.2
    ]
  s8 $ synth "ph*3" # mul (choose [0,0,0,0])



hush

do
  cps(140/120)
  s1 $
    -- ssA 0.4 $
    -- brF 0.8 $
    -- brS 0.3 $
    -- degradeBy 0.3 $
    stack [ sometimesBy 0 (stut 4 1 0.25) $zz [3,7] $ ba "1 ~ ~ 1 ~ ~ 1 1/2" # note (choose [0..30])
          , bd "1/3"
          , ssA 0.8 $ (0.5 ~>) $ randcat [cp "1/2",bj "1/3"]
          , rr [3,8] $ ch "1 1/2 1 1 1 1/3 1/8 1"
          , oh "1*8?"
          , dp "1 1/7 1/3 1/4 1/5 1 1/2 1/6" # nc [0] |+| oc [0] # a1 0.3 # rd1 0.8 3 # rd2 0.001 0.1 # i2 0
          , ssB 0.3 $ rr [4] $ rev $ ak "1(6,8,{0,1})" # nc [0..60] # rd1 0.03 0.3
          , th "{1/5 1/2 1/4 ~}/6" # note "0 3 2 -1" |+| oc [2] # rd1 4 6
          ]
  s8 $ synth "ph*3?" # mul (choose [0,0,0])


do
  cps(140/120)
  s1 $
    -- chunk 3 (rev) $
    -- sometimesBy 0.8 (spreadr (stut 3 1) (map (/8) [4,5,6,7,8])) $
    -- brF 0.8 $
    -- degradeBy 0.8 $
    stack [ randcat [ba x | x <- ["1*6", "1*4", "1*3", "1*2"]]
          , randcat [bd x | x <- ["1/3", "", "1/2"]]
          , randcat [ch x | x <- ["1*8", "1*6", "1*7"]]
          , randcat [oh x | x <- ["1", "1*2", "1*3"]]
          , randcat [cp x | x <- ["1*3", "1*2"]]
          , randcat [ac x | x <- ["1*4?", "1*3", "1*6?"]]
            # nc Scales.diminished2 |+| oc [0..3]
            # ra1 0.0001 0.0001 # rd1 0.1 0.8
            # ra2 0.0001 0.0005 # rd2 0.2 0.4 # ri2 0.7 0.8
          , randcat [dp x | x <- ["1*16?"]]
            # nc Scales.diminished2 |+| oc [0,1]
            # ra1 0.0001 0.0001 # rd1 0.2 0.2
            # ra2 0.0001 0.05 # rd2 0.3 0.6 # ri2 0.04 0.4
            # rsl 0.001 0.2
          , randcat [ak x | x <- ["1*5", "1*3", "1*7"]]
            # nc [0..96]
            # rd1 0.1 0.4
          ]
  s8 $ synth "ph*8?" # mul (choose [0,0,0])



do
  cps(140/120)
  s1 $
    -- slow 4 $
    -- brF 0.8 $
    degradeBy 0.8 $
    -- brF 0.2 $
    brS 2 $
    spreadr ($) [e 11 16, e 8 11,e 7 13, e 6 11, e 3 13] $
    stack [ ba "1"
          , ac "1"
            # nc [5,6,8] |+| oc [8]
            # ra1 0.0001 0.001 # rd1 0.4 0.8
            # ra2 0.0001 0.001 # rd2 0.4 3 # ri2 0.8 0.8
          , dp "1"
            # nc [0] |+| oc [1]
            # ra1 0.0001 0.001 # rd1 0.4 2
            # ra2 0.0001 0.001 # rd2 0.4 3 # ri2 0.2 0.8
          -- , th "1"
          --   # nc [0,3] |+| oc [4,4,4,5]
          --   # rd1 0.2 0.3
          , ak "1"
            # nc[90..127]
            # rd1 0.2 3
          , oh "1"
          ]
  s8 $ synth "ph*8?" # mul (choose [0])

hush


do
  cps(123/120)
  s1 $
    -- brF 0.2$
    -- brS 0.4$
    stack [ bd "1 ~ 1/2 ~ ~ 1/4 ~ ~"
             , ba "1(3,8)"
             , dp "{1*6?}%4" # note "{0 3 2 6 2 11}%4" |+| oc [0,1,2] # a1 0.0001 # rd1 0.8 2 # a2 0.0001 # rd2 0.2 0.6 # ri2 0.3 0.9
             , ac "{1(8,16)}?" # oc [4,5,6] # a1 0.00001 # rd1 0.01 0.4 # a2 0.0001 # rd2 0.3 0.4 # ri2 0.6 0.7
             , ssA 0.6  $ ak "1*8?" # note 36 # rd1 0.1 0.3
             , slow 3 $ th "1(3,8,1)" # note 48 # rd1 0.1 0.2
             , (1 ~>) $ ch "1*8?"
             , oh "1*2"
             ]
  s8 $ synth "ph" # mul (choose [0,0])
